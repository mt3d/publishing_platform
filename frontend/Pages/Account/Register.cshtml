@page
@using Microsoft.AspNetCore.Mvc.RazorPages
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using System.Text
@using frontend
@using Microsoft.AspNetCore.Mvc
@model RegisterModel

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow-sm p-4" style="max-width: 420px; width: 100%;">
        <div class="text-center mb-4">
            <h2 class="fw-bold">Join ThoughtHub</h2>
            <p class="text-muted">Create an account to start reading and writing</p>
        </div>

        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        <form method="post">
            @Html.AntiForgeryToken()

            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />

            <div class="mb-3">
                <label asp-for="UserName" class="form-label">Username</label>
                <input asp-for="UserName" class="form-control" placeholder="Choose a username" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Email" class="form-label">Email</label>
                <input asp-for="Email" class="form-control" placeholder="you@example.com" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label">Password</label>
                <input asp-for="Password" class="form-control" type="password" placeholder="••••••••" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-dark w-100">Create Account</button>
        </form>

        <div class="text-center mt-3">
            <small class="text-muted">
                Already have an account?
                <a asp-page="/Account/Signin">Sign in</a>
            </small>
        </div>
    </div>
</div>


@functions {
    public class RegisterModel : PageModel
    {
        private readonly AuthApiClient client;

        public RegisterModel(AuthApiClient client)
        {
            this.client = client;
        }

        [BindProperty, Required]
        public string UserName { get; set; } = string.Empty;

        [BindProperty, Required]
        public string Email { get; set; } = string.Empty;

        [BindProperty, Required]
        public string Password { get; set; } = string.Empty;

        [BindProperty(SupportsGet = true)]
        public string? ReturnUrl { get; set; }

        public void OnGet() { }

        
        public async Task<IActionResult> OnPostAsync()
        {
            if (!ModelState.IsValid)
            {
                return Page();
            }

            HttpResponseMessage response = await client.RegisterAsync(UserName, Email, Password);

            if (response.IsSuccessStatusCode)
            {
                return Redirect(ReturnUrl ?? "/");
            }

            ModelState.AddModelError("", "Registration failed. Try again.");
            return Page();
        }
	}
}